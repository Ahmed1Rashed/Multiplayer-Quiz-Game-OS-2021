/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import clientside.QuizGameClient;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author hp
 */
public class GUI extends javax.swing.JFrame {
    private final DefaultListModel participantsListModel;
    private final QuizGameClient client;
    private final Timer roundDurationTimer;
    private TimerTask roundDurationTask;
    private long remainingRoundDuration;
    
    private void disableButtons() {
        choiceAButton.setEnabled(false);
        choiceBButton.setEnabled(false);
        choiceCButton.setEnabled(false);
        choiceDButton.setEnabled(false);
    }
    
    private void enableButtons() {
        choiceAButton.setEnabled(true);
        choiceBButton.setEnabled(true);
        choiceCButton.setEnabled(true);
        choiceDButton.setEnabled(true);
    }
    
    public void sendAnswer(String answer) {
        client.sendToServer(answer);
        disableButtons();
    }
    
    private void decrementTimer(long decr) {
        remainingRoundDuration -= decr;
        roundDurationLabel.setText(Long.toString(remainingRoundDuration/1000));
    }
    
    public void receiveRoundDuration(long roundDuration) {
        remainingRoundDuration = roundDuration;
        roundDurationLabel.setText(Long.toString(remainingRoundDuration/1000));
        if(roundDurationTask != null) {
            roundDurationTask.cancel();
            roundDurationTimer.purge();
        }
        roundDurationTask = new TimerTask() {
            @Override
            public void run() {
                decrementTimer(1000);
            }
        };
        roundDurationTimer.scheduleAtFixedRate(roundDurationTask, 1000, 1000);
    }
    
    public void receiveQuestion(String[] question) {
        questionLabel.setText(question[0]);
        choiceAButton.setText(question[1]);
        choiceBButton.setText(question[2]);
        choiceCButton.setText(question[3]);
        choiceDButton.setText(question[4]);
        enableButtons();
    }
    
    public void receiveVerdict(boolean verdict) {
        if(verdict) {
            JOptionPane.showMessageDialog(this, "Correct!", "Verdict", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            JOptionPane.showMessageDialog(this, "Incorrect :(", "Verdict", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    public void receiveScoreboard(String[] scoreboard) {
        participantsListModel.clear();
        for (String score : scoreboard) {
            participantsListModel.addElement(score);
        }
    }
    
    public String requestName() {
        return JOptionPane.showInputDialog("Please enter your name", "");
    }

    /**
     * Creates new form GUI
     * @param client
     */
    public GUI(QuizGameClient client) {
        participantsListModel = new DefaultListModel();
        initComponents();
        this.client = client;
        roundDurationTimer = new Timer();
        roundDurationTask = null;
        disableButtons();
        //roundDurationTimer.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choiceDButton = new javax.swing.JButton();
        choiceCButton = new javax.swing.JButton();
        choiceBButton = new javax.swing.JButton();
        choiceAButton = new javax.swing.JButton();
        questionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        participantsList = new javax.swing.JList<>();
        roundDurationLabel = new javax.swing.JLabel();
        remainingTimeLabel = new javax.swing.JLabel();
        remainingTimeSecondsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        choiceDButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        choiceDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceDButtonActionPerformed(evt);
            }
        });

        choiceCButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        choiceCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceCButtonActionPerformed(evt);
            }
        });

        choiceBButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        choiceBButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceBButtonActionPerformed(evt);
            }
        });

        choiceAButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        choiceAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choiceAButtonActionPerformed(evt);
            }
        });

        questionLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Question Statement"));

        participantsList.setBorder(new javax.swing.border.MatteBorder(null));
        participantsList.setModel(participantsListModel);
        jScrollPane1.setViewportView(participantsList);

        roundDurationLabel.setText("10");

        remainingTimeLabel.setText("Remaining time: ");

        remainingTimeSecondsLabel.setText("seconds");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(remainingTimeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roundDurationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remainingTimeSecondsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 417, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(choiceDButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(questionLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choiceAButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choiceBButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(choiceCButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(14, 14, 14)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roundDurationLabel)
                            .addComponent(remainingTimeLabel)
                            .addComponent(remainingTimeSecondsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(questionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choiceAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(choiceBButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(choiceCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(choiceDButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void choiceAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceAButtonActionPerformed
        sendAnswer("A");
    }//GEN-LAST:event_choiceAButtonActionPerformed

    private void choiceBButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceBButtonActionPerformed
        sendAnswer("B");
    }//GEN-LAST:event_choiceBButtonActionPerformed

    private void choiceCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceCButtonActionPerformed
        sendAnswer("C");
    }//GEN-LAST:event_choiceCButtonActionPerformed

    private void choiceDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choiceDButtonActionPerformed
        sendAnswer("D");
        //choiceDButton.setEnabled(false);
    }//GEN-LAST:event_choiceDButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choiceAButton;
    private javax.swing.JButton choiceBButton;
    private javax.swing.JButton choiceCButton;
    private javax.swing.JButton choiceDButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> participantsList;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel remainingTimeLabel;
    private javax.swing.JLabel remainingTimeSecondsLabel;
    private javax.swing.JLabel roundDurationLabel;
    // End of variables declaration//GEN-END:variables

}
